package com.love2loveapp.utils

import java.util.*

/**
 * üéØ UserNameGenerator - G√©n√©ration automatique de noms d'utilisateur
 * 
 * √âquivalent Android du m√©canisme iOS pour g√©n√©rer des noms automatiques
 * quand l'utilisateur ne fournit pas de nom lors de l'onboarding.
 * 
 * Format g√©n√©r√© :
 * - Fran√ßais : "Utilisateur" + 4 premiers caract√®res UUID (ex: "UtilisateurA3F2")
 * - Anglais/Autre : "User" + 4 premiers caract√®res UUID (ex: "UserA3F2")
 */
object UserNameGenerator {
    
    /**
     * G√©n√®re un nom automatique selon les r√®gles iOS
     * @param userId L'UUID de l'utilisateur (utilis√© pour extraire les 4 premiers caract√®res)
     * @param languageCode Code langue pour la localisation (optionnel, d√©tecte automatiquement)
     * @return Nom g√©n√©r√© automatiquement
     */
    fun generateAutomaticName(userId: String, languageCode: String? = null): String {
        // D√©tecter la langue syst√®me si pas fournie
        val detectedLanguage = languageCode ?: Locale.getDefault().language
        
        // Extraire 4 premiers caract√®res de l'UUID (comme iOS)
        val shortId = userId.take(4).uppercase()
        
        // G√©n√©rer selon la langue
        val generatedName = if (detectedLanguage.startsWith("fr")) {
            "Utilisateur$shortId"  // üá´üá∑ Fran√ßais
        } else {
            "User$shortId"         // üá∫üá∏ Anglais/Autre (fallback)
        }
        
        android.util.Log.d("UserNameGenerator", "‚úÖ G√©n√©ration: '$generatedName' (langue: $detectedLanguage)")
        
        return generatedName
    }
    
    /**
     * V√©rifie si un nom est vide (selon les r√®gles iOS)
     * @param name Le nom √† v√©rifier
     * @return true si le nom est consid√©r√© comme vide
     */
    fun isNameEmpty(name: String?): Boolean {
        return name.isNullOrBlank() || name.trim().isEmpty()
    }
    
    /**
     * Traite un nom d'entr√©e et retourne soit le nom original soit un nom g√©n√©r√©
     * @param inputName Le nom fourni par l'utilisateur
     * @param userId L'UUID de l'utilisateur
     * @param languageCode Code langue (optionnel)
     * @return Le nom final √† utiliser
     */
    fun processUserName(inputName: String?, userId: String, languageCode: String? = null): String {
        return if (isNameEmpty(inputName)) {
            generateAutomaticName(userId, languageCode)
        } else {
            inputName!!.trim()
        }
    }
    
    /**
     * G√©n√®re un UUID simple pour les tests
     * Format : 8-4-4-4-12 caract√®res
     */
    fun generateUserId(): String {
        return UUID.randomUUID().toString()
    }
}
